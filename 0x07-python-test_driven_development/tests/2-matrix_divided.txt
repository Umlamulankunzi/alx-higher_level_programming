Doctests for module ``02-matrix_divided``
=========================================

import module
-----------------------------------------
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

_________________________________________
Test Case 1: pass valid matrix of integers
-----------------------------------------
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

_____________________________________
Test Case 2: pass valid matrix of floats
-------------------------------------
>>> matrix_divided([[1.7, 2.5, 3.2], [4.1, 5.9, 6.7]], 3)
[[0.57, 0.83, 1.07], [1.37, 1.97, 2.23]]

_____________________________________
Test Case 3: matrice with list of different sizes
-------------------------------------
>>> matrix_divided([[7, 5, 2], [4, 9]], 5)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

_____________________________________
Test Case 4: type(matrix) == str
-------------------------------------
>>> matrix_divided("hello world", 5)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

_____________________________________
Test Case 5: mixing floats, ints
-------------------------------------
>>> matrix_divided([[-7, 5.2, -2.7], [-4, 9.7, 15.7]], -5)
[[1.4, -1.04, 0.54], [0.8, -1.94, -3.14]]

_____________________________________
Test Case 6: string for div
-------------------------------------
matrix_divided([[5, 2, 78], [64, 7, 17]], "hello")
Traceback (most recent call last):
...
TypeError: div must be a number

_____________________________________
Test Case 7: div equal to 0
-------------------------------------
>>> matrix_divided([[5, 2, 78], [64, 7, 17]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
